#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#define normal 0
#define rgb   1
#define bluetooth   2

/ {
    macros {
        ctrlz: ctrlz {
            label = "ZM_ctrlz";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LCTRL>    
                , <&macro_tap     &kp Z>    
                , <&macro_release &kp LCTRL>
                ;
        };
        ctrlv: ctrlv {
            label = "ZM_ctrlv";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LCTRL>    
                , <&macro_tap     &kp V>    
                , <&macro_release &kp LCTRL>
                ;
        };
        ctrlt: ctrlt {
            label = "ZM_ctrlt";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LCTRL>    
                , <&macro_tap     &kp T>    
                , <&macro_release &kp LCTRL>
                ;
        };
      ctrlu: ctrlu {
            label = "ZM_ctrlu";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LCTRL>    
                , <&macro_tap     &kp U>    
                , <&macro_release &kp LCTRL>
                ;
        };
    };
    };
    };
};

keymap {
		compatible = "zmk,keymap";

		normal {
// ------------------------------------------
// |  mute  |  esc  |  tab  |  to3  |  to1  |
// |  ctrl  | shift |  alt  |  back | enter |
// ------------------------------------------

			bindings = <
	&kp K_MUTE &kp ESC    &kp TAB  &kp BSPC    &kp RET
	&kp LCTRL  &kp LSHIFT &kp LALT &to 2       &to 1
			>;
            sensor-bindings = <
            &inc_dec_kp C_VOL_UP C_VOL_DN              
            >;
		};
		rgb {
// -------------------------------
// |mute |  a  |  b  | to3 | to1 |
// |ctrl |shift| alt | back|RGTOG|
// -------------------------------

			bindings = <
    &rgb_ug RGB_TOG    &rgb_ug RGB_EFR     &rgb_ug RGB_EFF     &rgb_ug RGB_BRD       &rgb_ug RGB_BRI
	&rgb_ug RGB_SAD    &rgb_ug RGB_SAI     &rgb_ug RGB_HUD     &rgb_ug RGB_HUI       &to 3
			>;
            sensor-bindings = <
            &inc_dec_kp LBKT RBKT       
            >;
		};
        bluetooth {
// -------------------------------
// |mute |  a  |  b  | to3 | to1 |
// |ctrl |shift| alt | back|enter|
// -------------------------------

			bindings = <
	&trans      &trans       &&bt BT_PRV      &bt BT_NXT       &bt BT_CLR
	&trans      &trans       &trans           &trans           &to 0

			>;
		};
	};
};
